(function(L){typeof define=="function"&&define.amd?define(L):L()})(function(){"use strict";function L(o=16){const n="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";return Array.from({length:o},()=>n.charAt(Math.floor(Math.random()*n.length))).join("")}function g(o,n,e,r={}){const t=new Date(Date.now()+e*864e5).toUTCString(),a=location.protocol==="https:"?"Secure;":"",s=r.sameSite||"Strict";document.cookie=`${o}=${encodeURIComponent(n)}; expires=${t}; path=/; ${a} SameSite=${s};`}function w(o){return document.cookie.split("; ").reduce((n,e)=>{const r=e.split("=");return r[0]===o?decodeURIComponent(r[1]):n},"")}function S(o){g(o,"",-1)}function m(...o){window.__LM_DEBUG__&&console.log(...o)}function u(...o){window.__LM_DEBUG__&&console.warn(...o)}function d(...o){window.__LM_DEBUG__&&console.error(...o)}function A(){const o=window.__LM_LOGIN_CONFIG__;if(!o){d("[lm-login] No se encontró la configuración global.");return}const{AUTH_URL_BASE:n,clientId:e,redirectUri:r,loginHint:t="wst",uiLocales:a="es",scope:s="openid",realm:i="lifemiles"}=o;if(!n){d("[lm-login] No se definió AUTH_URL_BASE en el config.");return}const c=L(16);localStorage.setItem("lm-login-state",c);const l=n.replace("${realm}",i),f=new URL(l);f.searchParams.set("client_id",e),f.searchParams.set("response_type","code"),f.searchParams.set("scope",s),f.searchParams.set("login_hint",t),f.searchParams.set("ui_locales",a),f.searchParams.set("redirect_uri",r),f.searchParams.set("state",c),window.location.href=f.toString()}async function D(){const o=window.__LM_LOGIN_CONFIG__;if(!o){d("[lm-login] No se encontró la configuración global.");return}const{TOKEN_GRANT_URL:n,USER_INFO_URL:e,application_ID:r,redirectAfterLogin:t,clientSecret:a,redirectUri:s,clientId:i}=o,c=new URLSearchParams(window.location.search),l=c.get("code"),f=c.get("state"),h=localStorage.getItem("lm-login-state");if(!l){d("[lm-login] No se encontró el parámetro `code` en la URL.");return}if(!f||!h||f!==h){d("[lm-login] El parámetro `state` no coincide o está ausente. Posible ataque.");return}localStorage.removeItem("lm-login-state"),m("[lm-login] Código recibido y verificación de state exitosa:",l);try{const k=await fetch(n,{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded"},credentials:"include",body:new URLSearchParams({client_id:i,client_secret:a,grant_type:"authorization_code",code:l,redirect_uri:s})});if(!k.ok)throw new Error("No se pudo obtener el token");const _=await k.json();if(!(_!=null&&_.access_token))throw new Error("Token de acceso no presente en respuesta");g("access_token",_.access_token,1),g("id_token",_.id_token,1),g("refresh_token",_.refresh_token,1),m("[lm-login] Tokens guardados en cookies");const R=await fetch(e,{headers:{Authorization:`Bearer ${_.access_token}`}});if(!R.ok)throw new Error("No se pudo obtener el perfil de usuario");const N=(await R.json())["lm-id"];N&&(g("userinfo",N,1),m("[lm-login] userinfo guardado en cookie:",N));const U=sessionStorage.getItem("lm-pending-flow");if(U){const{flow:O,params:F,timestamp:j,originUrl:$}=JSON.parse(U),x=Date.now(),z=15*60*1e3;if(x-j<=z){if(sessionStorage.removeItem("lm-pending-flow"),m(`[lm-login] Login exitoso. Ejecutando flujo pendiente: ${O}`),typeof window.lmFetchWrapper=="function")try{const I=await window.lmFetchWrapper(O,F);m("[lm-login] Flujo ejecutado correctamente:",I),$&&(window.location.href=$);return}catch(I){d("[lm-login] Error ejecutando flujo pendiente:",I.message)}else u("[lm-login] lmFetchWrapper no está disponible.");return}else u("[lm-login] El flujo pendiente expiró. Limpiando..."),sessionStorage.removeItem("lm-pending-flow")}t?window.location.href=t:u("[lm-login] No se definió redirectAfterLogin en el config.")}catch(k){d("[lm-login] Error completando login:",k.message)}}function C(){const o=window.__LM_LOGIN_CONFIG__;if(!o){d("[lm-login] No se encontró la configuración global.");return}const{LOGOUT_URL_BASE:n,redirectAfterLogout:e,realm:r="lifemiles"}=o;if(S("access_token"),S("id_token"),S("refresh_token"),S("userinfo"),m("[lm-login] Sesión cerrada. Cookies eliminadas."),!n||!e){u("[lm-login] No se definió LOGOUT_URL_BASE o redirectAfterLogout en el config.");return}const t=new URL(n.replace("${realm}",r));t.searchParams.set("redirect_uri",e),window.location.href=t.toString()}async function y(o){const n=window.__LM_LOGIN_CONFIG__,e=n==null?void 0:n.ALLOWED_DOMAINS_URL;if(!e)return u("[LM Login] No se definió ALLOWED_DOMAINS_URL en la configuración."),!1;const r=window.location.hostname,t=new Date,a=`${t.getFullYear()}${(t.getMonth()+1).toString().padStart(2,"0")}${t.getDate().toString().padStart(2,"0")}${t.getHours().toString().padStart(2,"0")}`,s=`${e}?v=${a}`;try{const i=await fetch(s);if(!i.ok)throw new Error("No se pudo cargar la lista de dominios autorizados.");const c=await i.json();return((c==null?void 0:c[o.toUpperCase()])||[]).some(h=>r===h||r.endsWith("."+h))?(m(`[LM Login] Dominio autorizado (${r}) para env: ${o}`),!0):(u(`[LM Login] Dominio no autorizado: ${r} para el entorno ${o}`),!1)}catch(i){return d("[LM Login] Error al validar dominio:",i.message),!1}}async function b(){var e,r,t,a,s;const o=window.__LM_LOGIN_CONFIG__;if(!o)return d("[lm-login] Configuración no encontrada para refresh."),!1;const n=w("refresh_token");if(!n)return u("[lm-login] No hay refresh_token disponible."),(e=window.lmLogin)==null||e.call(window),!1;try{const i=await fetch(o.TOKEN_REFRESH_URL,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({authorizationCode:n,applicationID:o.application_ID})});if(i.status===400)return u("[lm-login] Token de refresh inválido o expirado (400). Lanzando login."),(r=window.lmLogin)==null||r.call(window),!1;if(!i.ok)return u(`[lm-login] Refresh falló con HTTP status: ${i.status}`),(t=window.lmLogin)==null||t.call(window),!1;const l=(await i.json()).TokenGrantResponse;return!l||!l.access_token||l.access_token.trim()===""?(d("[lm-login] Refresh respondió pero sin access_token válido. Forzando login."),(a=window.lmLogin)==null||a.call(window),!1):(g("access_token",l.access_token,1),g("id_token",l.id_token,1),g("refresh_token",l.refresh_token,1),m("[lm-login] Sesión refrescada correctamente."),!0)}catch(i){return d("[lm-login] Error refrescando sesión:",i.message),(s=window.lmLogin)==null||s.call(window),!1}}async function E(o,n={}){try{let e=await fetch(o,n);for(;e.status===401||e.status===403;)if(u(`[lm-login] Token expirado (${e.status}). Intentando refresh...`),typeof window.lmRefreshSession=="function")if(await window.lmRefreshSession()){m("[lm-login] Refresh exitoso. Reintentando llamada original...");const t=w("access_token");n.headers?n.headers.Authorization=`Bearer ${t}`:n.headers={Authorization:`Bearer ${t}`},e=await fetch(o,n)}else return u("[lm-login] El refresh falló. Retornando flag de expiración..."),{expired:!0};else return d("[lm-login] lmRefreshSession no está disponible."),{expired:!0};return e}catch(e){throw d("[lm-login] Error en fetchWithAutoRefresh:",e.message),e}}function p(o,n={}){u("[lm-login] Faltan cookies. Guardando flow pendiente e iniciando login..."),sessionStorage.setItem("lm-pending-flow",JSON.stringify({flow:o,params:n,originUrl:window.location.href,timestamp:Date.now()})),typeof window.lmStartLogin=="function"?window.lmStartLogin():d("[lm-login] No se encontró la función lmStartLogin.")}async function T(o,n={}){const e=window.__LM_LOGIN_CONFIG__;if(!e)return u("[lm-login] Config not found para fetchWrapper"),null;switch(o){case"lmBalance":{const r=e.API_BASE_BALANCE,t=w("access_token"),a=w("userinfo"),s=e==null?void 0:e.realm;if(!r||!a||!t)return p("lmBalance",n),null;const i={membershipNumber:a,flowId:"ALL",...n},c=await E(r,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${t}`,realm:s},body:JSON.stringify(i)});if(c!=null&&c.expired)return p("lmBalance",n),null;if(c)return c;throw new Error("[lm-Balance] No se obtuvo respuesta del servidor.")}case"EliteProgram":{const r=e.API_BASE_ELITE,t=w("userinfo"),a=n.lang||w("lng-stg")||"es",s=w("access_token"),i=e==null?void 0:e.realm;if(!r||!t||!s)return p("EliteProgram",{lang:a}),null;const c=`${r}/${t}/${a}`,l=await E(c,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${s}`,realm:i}});if(l!=null&&l.expired)return p("EliteProgram",{lang:a}),null;if(l)return l;throw new Error("[lm-Elite] No se obtuvo respuesta del servidor.")}case"memberProfile":{const r=e.API_BASE_PROFILE,t=w("access_token"),a=e==null?void 0:e.realm;if(!r||!t)return p("memberProfile",n),null;const s=await E(r,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${t}`,realm:a}});if(s!=null&&s.expired)return p("memberProfile",n),null;if(s)return s;throw new Error("[lm-Profile] No se obtuvo respuesta del servidor.")}default:return u(`[lm-login] Flujo "${o}" no está implementado.`),null}}const v="https://s3-eu-west-1.amazonaws.com/lifemileswebsite-s3bucket-41/lm_cms/images/EON/LOGIN",G=window.location.host;function P(){const o=document.currentScript||[...document.querySelectorAll("script")].find(r=>r.src.includes("lm-login")||r.src.includes("lm-login.js")),e=new URL((o==null?void 0:o.src)||"",window.location.href).searchParams.get("env");return(e==null?void 0:e.toUpperCase())||"PROD"}function B(o){const n=G.replace(/\./g,"-").replace(/-com$/,"");switch(o.toLowerCase()){case"dev":return`dev-env-config-${n}.js`;case"qa":return`qa-env-config-${n}.js`;case"uat":return"uat-env-config-h37-weather-app-vercel-app.js";case"prd":return"prd-env-config-h37-weather-app-vercel-app.js";default:return"env-config.js"}}function M(o){return new Promise((n,e)=>{const r=B(o),t=new Date,a=`${t.getFullYear()}${(t.getMonth()+1).toString().padStart(2,"0")}${t.getDate().toString().padStart(2,"0")}${t.getHours().toString().padStart(2,"0")}`,s=`${v}/${r}?v=${a}`,i=document.createElement("script");i.src=s,i.async=!0,i.onload=n,i.onerror=()=>e(new Error(`No se pudo cargar: ${s}`)),document.head.appendChild(i)})}(function(){const n=P();M(n).then(()=>{const e=window.__LM_LOGIN_CONFIG__;if(!e){d("[lm-login] No se encontró __LM_LOGIN_CONFIG__");return}const t=(e.allowed_debug_envs||[]).includes(n.toLowerCase());return window.__LM_DEBUG__=t,y(n)}).then(e=>{e&&(window.lmLogin=A,window.lmLogout=C,window.lmCompleteLogin=D,window.lmRefreshSession=b,window.lmFetch=E,window.lmFetchWrapper=T,window.lmStartLogin=A,m("[lm-login] Config cargada y funciones disponibles."))}).catch(e=>{d("[lm-login] Error al inicializar:",e)})})()});
